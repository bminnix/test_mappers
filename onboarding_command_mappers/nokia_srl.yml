---
sync_devices:
  hostname:
    commands:
      command: "show version | as json"
      parser: "none"
      jpath: '"basic system info"."Hostname"'
  serial:
    commands:
      command: "show version | as json"
      parser: "none"
      jpath: '"basic system info"."Serial Number"'
  device_type:
    commands:
      command: "show version | as json"
      parser: "none"
      jpath: '"basic system info"."Chassis Type"'
  mgmt_interface:
    commands:
      - command: "show interface all | as json"
        parser: "none"
        jpath: "interfaces[].{name: name, match_ip: address[].prefix|[?contains(@, '{{ obj }}')]}[?match_ip].name"
        post_processor: "{{ [obj[0]] }}"
      - command: "show interface all | as json"
        parser: "none"
        jpath: "interfaces[].subinterfaces[].{name: name, match_ip: address[].prefix|[?contains(@, '{{ obj }}')]}[?match_ip].name"
        post_processor: "{{ mgmt_interface + [obj[0]][0] }}"
  mask_length:
    commands:
      - command: "show interface all | as json"
        parser: "none"
        jpath: "interfaces[].{name: name, match_ip: address[].prefix|[?contains(@, '{{ obj }}')]}[?match_ip].match_ip[0]"
        post_processor: "{{ [obj[0].split('/')[1]] }}"
        iterable_type: "int"
      - command: "show interface all | as json"
        parser: "none"
        jpath: "interfaces[].subinterfaces[].{name: name, match_ip: address[].prefix|[?contains(@, '{{ obj }}')]}[?match_ip].match_ip[0]"
        post_processor: "{{ mask_length + [obj[0].split('/')[1]][0] }}"
        iterable_type: "int"